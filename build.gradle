plugins {
	id 'java'
	id 'eclipse'
	id 'application'
	id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
}

group = 'com.doer'
version = '1.0'
archivesBaseName = 'loan-api'
sourceCompatibility = '17'
mainClassName = 'net.celloscope.mraims.loanportfolio.LoanPortfolioApplication'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'

    implementation 'com.oracle.database.r2dbc:oracle-r2dbc:1.1.0'
    implementation 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'

    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.15'
    implementation 'org.springdoc:springdoc-openapi-webflux-core:1.6.15'

    implementation 'org.modelmapper:modelmapper:3.1.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation("org.tuxdude.logback.extensions:logback-colorizer:1.0.1")
    implementation("org.fusesource.jansi:jansi:1.11")



    implementation 'org.testng:testng:7.7.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.testcontainers:postgresql:1.17.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-security'

}



sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration-test/java"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    useJUnitPlatform()
}

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
